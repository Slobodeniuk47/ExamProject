name: dockercompose1062708286567786740
services:
  backend:
    build:
      context: D:\ExamShop\WebApi
      dockerfile: WebApi/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebApi
    container_name: WebApi
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: webapi
    labels:
      com.microsoft.visual-studio.project-name: WebApi
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/WebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Asus F15\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
  client:
    build:
      context: D:\ExamShop\exam-front
      dockerfile: Dockerfile
    image: client
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "5001"
        protocol: tcp
  proxy:
    image: nginx:mainline
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\ExamShop\WebApi\nginx.conf
        target: /etc/nginx.conf
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose1062708286567786740_default