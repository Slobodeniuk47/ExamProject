name: dockercompose1062708286567786740
services:
  backend:
    build:
      context: D:\ExamShop\WebApi
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebApi
    container_name: my-app-conainer
    depends_on:
      postgres_db:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: webapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/WebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      myAppNetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: D:\ExamShop\WebApi\WebApi
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\ExamShop\WebApi
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\.nuget\packages\
        target: /root/.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus F15\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
  client:
    build:
      context: D:\ExamShop\exam-front
      dockerfile: Dockerfile
    image: slobodeniuk47/client
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "5001"
        protocol: tcp
  postgres_db:
    container_name: postgres_container
    environment:
      POSTGRES_DB: temp-db1
      POSTGRES_PASSWORD: Hgfpbp31
      POSTGRES_USER: azure_admin
    image: postgres:16
    networks:
      myAppNetwork: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose1062708286567786740_default
  myAppNetwork:
    name: dockercompose1062708286567786740_myAppNetwork
    driver: bridge
volumes:
  postgres-data:
    name: dockercompose1062708286567786740_postgres-data